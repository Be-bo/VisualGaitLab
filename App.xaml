<Application x:Class="VisualGaitLab.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:VisualGaitLab"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- COLOR -->
        <Color x:Key="DefaultBlue" R="12" G="137" B="255" A="255"/>
        <SolidColorBrush x:Key="DefaultBlueBrush" Color="{StaticResource DefaultBlue}"/>

        <Color x:Key="DefaultGrey" R="237" G="237" B="237" A="255"/>
        <SolidColorBrush x:Key="DefaultGreyBrush" Color="{StaticResource DefaultGrey}"/>

        <Color x:Key="ControlGrey" R="105" G="105" B="105" A="255"/>
        <SolidColorBrush x:Key="ControlGreyBrush" Color="{StaticResource ControlGrey}"/>


        <!-- DEFAULT -->
        <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse Width="10" Height="10" Stroke="DarkSlateGray" StrokeThickness="0.5">
                            <Ellipse.Fill >
                                <SolidColorBrush Color="#00ff00" Opacity="0.8"></SolidColorBrush>
                            </Ellipse.Fill>
                            <Ellipse.BitmapEffect>
                                <DropShadowBitmapEffect Color="Black" Direction="320" ShadowDepth="5" Softness="0.5" Opacity="0.2" />
                            </Ellipse.BitmapEffect>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GaitTextBox" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="DialogTextBoxStyle" TargetType="TextBox">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Name="Border" BorderThickness="1" BorderBrush="{StaticResource ControlGreyBrush}" CornerRadius="3">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#0d89ff" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#696969" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#ededed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DialogTextBlockStyle" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="DialogButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
        </Style>

        <Style x:Key="WindowBorderStyle" TargetType="Border">
            <Setter Property="CornerRadius" Value="20"></Setter>
        </Style>

        <Style x:Key="DockPanelEmptyStyle" TargetType="DockPanel"></Style>

        <Style x:Key="TextButtonStyle" TargetType="Button">
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Background" Value="#0C89FF"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
        </Style>






        <!-- UI -->
        <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
            <Setter Property="FontFamily" Value="Helvetica Neue" />
            <Setter Property="FontSize" Value="15"/>
        </Style>

        <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Cursor" Value="Arrow"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style x:Key="TabControlStyle"  TargetType="{x:Type TabControl}">
            <Setter Property="Background" Value="#ededed"/>
            <Setter Property="BorderBrush" Value="{StaticResource DefaultBlueBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
        </Style>

        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" BorderThickness="1,1,1,0" CornerRadius="3, 3, 0, 0" Margin="2,0">
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#ededed" />
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#0d89ff" />
                                <Setter TargetName="Border" Property="Margin" Value="-1"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#909090" />
                                <Setter TargetName="Border" Property="Margin" Value="-1"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Border CornerRadius="3"
                            BorderThickness="1"
                            Background="White"
                                BorderBrush="{StaticResource ControlGreyBrush}">
                                <ScrollViewer x:Name="PART_ContentHost"/>

                            </Border>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border" BorderThickness="1" BorderBrush="{StaticResource DefaultBlueBrush}" CornerRadius="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PositiveButton" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="3" >
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0d89ff"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#909090"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NegativeButton" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="3" >
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#ededed"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#909090"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
